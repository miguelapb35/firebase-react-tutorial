{"version":3,"sources":["serviceWorker.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/SignOut/index.js","components/Session/context.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","constants/routes.js","components/Navigation/index.js","components/Landing/index.js","components/SignUp/index.js","components/PasswordForget/index.js","components/SignIn/index.js","components/Home/index.js","components/PasswordChange/index.js","components/Account/index.js","components/Admin/index.js","components/App/index.js","index.js"],"names":["Boolean","window","location","hostname","match","FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","user","uid","db","ref","users","app","initializeApp","this","database","type","onClick","AuthUserContext","withAuthentication","WithAuthentication","state","authUser","listener","onAuthStateChanged","setState","Provider","value","withAuthorization","condition","WithAuthorization","history","push","compose","withRouter","NavigationAuth","to","SignOut","NavigationNonAuth","Navigation","Landing","INITIAL_STATE","username","passwordOne","passwordTwo","error","SignUpFormBase","onSubmit","event","then","set","catch","preventDefault","onChange","target","name","isInvalid","placeholder","disabled","message","SignUpLink","SignUpForm","SignUpPage","PasswordForgetFormBase","PasswordForgetLink","PasswordForgetPage","PasswordForgetForm","SignInFormBase","SignInForm","SignInPage","PasswordChangeForm","PasswordChange","AdminPage","loading","on","snapshot","usersObject","val","usersList","Object","keys","map","key","off","UserList","exact","path","component","LandingPage","HomePage","AccountPage","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.be845edf.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\n\r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport const withFirebase = Component => props => (\r\n  <FirebaseContext.Consumer>\r\n    {firebase => <Component {...props} firebase={firebase} />}\r\n  </FirebaseContext.Consumer>\r\n);\r\n\r\nexport default FirebaseContext;","import app from 'firebase/app';  \r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyDu2cg8mD6hfEUXT1yA_9ijWvYZisU7Wso\",\r\n    authDomain: \"react-firebase-68027.firebaseapp.com\",\r\n    databaseURL: \"https://react-firebase-68027.firebaseio.com\",\r\n    projectId: \"react-firebase-68027\",\r\n    storageBucket: \"react-firebase-68027.appspot.com\",\r\n    messagingSenderId: \"246468063722\",\r\n    appId: \"1:246468063722:web:04ba74c70d125e611c4293\"\r\n};\r\n  \r\nclass Firebase {\r\n  constructor() {\r\n    app.initializeApp(config);\r\n\r\n    this.auth = app.auth();\r\n    this.db = app.database();\r\n  }\r\n\r\n  // ** Auth API ***\r\n\r\n  doCreateUserWithEmailAndPassword = (email, password) =>\r\n    this.auth.createUserWithEmailAndPassword(email, password);\r\n  \r\n  doSignInWithEmailAndPassword = (email, password) =>\r\n    this.auth.signInWithEmailAndPassword(email, password);\r\n  \r\n  doSignOut = () => this.auth.signOut();\r\n\r\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\r\n\r\n  doPasswordUpdate = password =>\r\n    this.auth.currentUser.updatePassword(password);\r\n  \r\n  // *** User API ***\r\n\r\n  user = uid => this.db.ref(`user/${uid}`);\r\n\r\n  users = () => this.db.ref(`users`);\r\n}\r\n\r\nexport default Firebase;","import FirebaseContext, {withFirebase} from './context';\r\nimport Firebase from './firebase';\r\n\r\nexport default Firebase;\r\n\r\nexport { FirebaseContext, withFirebase };","import React from 'react';\r\n\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst SignOutButton = ({ firebase }) => (\r\n  <button type='button' onClick={firebase.doSignOut}>\r\n    SignOut\r\n  </button>\r\n);\r\n\r\nexport default withFirebase(SignOutButton);","import React from 'react';\r\n\r\n\r\nconst AuthUserContext = React.createContext(null);\r\n\r\nexport default AuthUserContext;\r\n","import React from 'react';\r\n\r\nimport { AuthUserContext } from '../Session';\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst withAuthentication = Component => {\r\n  class WithAuthentication extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n        authUser: null,\r\n      };\r\n    } \r\n    \r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.auth.onAuthStateChanged(\r\n        authUser => {\r\n        authUser\r\n          ? this.setState({ authUser })\r\n          : this.setState({ authUser: null });\r\n      });\r\n    }\r\n\r\n    componentWillUnmout() {\r\n      this.listener();\r\n    }    \r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Provider value={this.state.authUser}>\r\n          <Component {...this.props} />;\r\n        </AuthUserContext.Provider>\r\n      );\r\n    }\r\n  }\r\n\r\n  return withFirebase(WithAuthentication);\r\n};\r\n\r\nexport default withAuthentication;","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\n\r\nimport AuthUserContext from './context';\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nconst withAuthorization = condition => Component => {\r\n  class WithAuthorization extends React.Component {\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.auth.onAuthStateChanged(\r\n        authUser => {\r\n          if (!condition(authUser)) {\r\n            this.props.history.push(ROUTES.SIGN_IN);\r\n          }\r\n        },\r\n      );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Consumer>\r\n          {authUser => \r\n            condition(authUser) ? <Component {...this.props} /> : null\r\n          }\r\n        </AuthUserContext.Consumer>\r\n      );\r\n    }\r\n  }\r\n\r\n  return compose(\r\n    withRouter,\r\n    withFirebase,\r\n  )(WithAuthorization);\r\n};\r\n\r\nexport default withAuthorization;","export const LANDING = '/';\r\nexport const SIGN_UP = '/signup';\r\nexport const SIGN_IN = '/signin';\r\nexport const HOME = '/home';\r\nexport const ACCOUNT = '/account';\r\nexport const ADMIN = '/admin';\r\nexport const PASSWORD_FORGET = '/pw-forget';\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport SignOutButton from '../SignOut';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { AuthUserContext } from '../Session';\r\n\r\nconst Navigation = () => (\r\n  <div>\r\n    <AuthUserContext.Consumer>\r\n      {authUser =>\r\n        authUser ? <NavigationAuth /> : <NavigationNonAuth />\r\n      }\r\n    </AuthUserContext.Consumer>\r\n  </div>\r\n);\r\n\r\nconst NavigationAuth = () => (\r\n    <ul>\r\n      <li>\r\n        <Link to={ROUTES.LANDING}>Landing</Link>\r\n      </li>\r\n      <li>\r\n        <Link to={ROUTES.HOME}>Home</Link>\r\n      </li>\r\n      <li>\r\n        <Link to={ROUTES.ACCOUNT}>Account</Link>\r\n      </li>\r\n      <li>\r\n        <Link to={ROUTES.ADMIN}>Admin</Link>\r\n      </li>\r\n      <li>\r\n        <SignOutButton />\r\n      </li>\r\n    </ul>\r\n);\r\n\r\nconst NavigationNonAuth = () => (\r\n  <ul>\r\n      <li>\r\n        <Link to={ROUTES.LANDING}>Landing</Link>\r\n    </li>\r\n      <li>\r\n        <Link to={ROUTES.SIGN_IN}>Sign In</Link>\r\n      </li>    \r\n  </ul>\r\n);\r\n\r\nexport default Navigation;","import React from 'react';\r\n\r\nconst Landing = () => (\r\n  <div>\r\n    <h1>Landing</h1>\r\n  </div>\r\n);\r\n\r\nexport default Landing;","import React, {Component} from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\n\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\n\r\nconst SignUpPage = () => (\r\n  <div>\r\n    <h1>SignUp</h1>\r\n    <SignUpForm />\r\n  </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n  username: '',\r\n  email: '',\r\n  passwordOne: '',\r\n  passwordTwo: '',\r\n  error: null,\r\n};\r\n\r\nclass SignUpFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {...INITIAL_STATE}\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { username, email, passwordOne } = this.state;\r\n\r\n    this.props.firebase\r\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\r\n      .then(authUser => {\r\n        // Create a user in your Firebase realtime database\r\n        return this.props.firebase\r\n          .user(authUser.user.uid)\r\n          .set({\r\n            username,\r\n            email,\r\n          });\r\n      })\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        this.props.history.push(ROUTES.HOME);\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n    \r\n    event.preventDefault();\r\n  }\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      username,\r\n      email,\r\n      passwordOne,\r\n      passwordTwo,\r\n      error\r\n    } = this.state;\r\n\r\n    const isInvalid =\r\n      passwordOne !== passwordTwo ||\r\n      passwordOne === '' ||\r\n      email === '' ||\r\n      username === '';\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input \r\n          name='username'\r\n          value={username}\r\n          onChange={this.onChange}\r\n          type='text'\r\n          placeholder='Full Name'\r\n        />\r\n        <input\r\n          name='email'\r\n          value={email}\r\n          onChange={this.onChange}\r\n          type='text'\r\n          placeholder='Email Address'\r\n        />\r\n        <input\r\n          name='passwordOne'\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type='password'\r\n          placeholder='Password'\r\n        />\r\n        <input\r\n          name='passwordTwo'\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type='password'\r\n          placeholder='Confirm Password'\r\n        />\r\n        <button disabled={isInvalid} type='submit'>\r\n          Sign Up\r\n        </button>\r\n\r\n        {error && <p> {error.message} </p> }\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst SignUpLink = () => (\r\n  <p>\r\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\r\n  </p>\r\n);\r\n\r\nconst SignUpForm = compose(\r\n  withRouter,\r\n  withFirebase,\r\n)(SignUpFormBase);\r\n  \r\n\r\nexport default SignUpPage;\r\n\r\nexport { SignUpForm, SignUpLink };\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nconst PasswordForgetPage = () => (\r\n  <div>\r\n    <h1>PasswordForget</h1>\r\n    <PasswordForgetForm />\r\n  </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n  email: '',\r\n  error: null,\r\n};\r\n\r\nclass PasswordForgetFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { email } = this.state;\r\n    this.props.firebase\r\n      .doPasswordReset(email)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n    \r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { email, error } = this.state;\r\n    \r\n    const isInvalid = email === '';\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input \r\n          name='email'\r\n          value={this.state.email}\r\n          onChange={this.onChange}\r\n          type='text'\r\n          placeholder='Email Address'\r\n        />\r\n        <button disabled={isInvalid} type='submit'>\r\n          Reset My Password\r\n        </button>\r\n\r\n        {error &&  <p> {error.message} </p> }\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst PasswordForgetLink = () => (\r\n  <p>\r\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\r\n  </p>\r\n);\r\n\r\nexport default PasswordForgetPage;\r\n\r\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\r\n\r\nexport { PasswordForgetForm, PasswordForgetLink };\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\n\r\nimport { SignUpLink } from '../SignUp';\r\nimport { PasswordForgetLink } from '../PasswordForget';\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nconst SignInPage = () => (\r\n  <div>\r\n    <h1>SignIn</h1>\r\n    <SignInForm />\r\n    <PasswordForgetLink />\r\n    <SignUpLink />\r\n  </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n  email: '',\r\n  password: '',\r\n  error: null,\r\n};\r\n\r\nclass SignInFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { email, password } = this.state;\r\n\r\n    this.props.firebase\r\n      .doSignInWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        this.props.history.push(ROUTES.HOME);\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n    \r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { email, password, error } = this.state;\r\n\r\n    const isInvalid = password === '' || email === '';\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name='email'\r\n          value={email}\r\n          onChange={this.onChange}\r\n          type='text'\r\n          placeholder='Email Address'\r\n        />\r\n        <input\r\n          name='password'\r\n          value={password}\r\n          onChange={this.onChange}\r\n          type='password'\r\n          placeholder='Password'\r\n        />\r\n        <button disabled={isInvalid} type='submit' >\r\n          Sign In\r\n        </button>\r\n\r\n        {error && <p> {error.message} </p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst SignInForm = compose(\r\n  withRouter,\r\n  withFirebase,\r\n)(SignInFormBase);\r\n\r\nexport default SignInPage;\r\n\r\nexport { SignInForm };","import React from 'react';\r\n\r\nimport { withAuthorization } from '../Session';\r\n\r\nconst HomePage = () => (\r\n  <div>\r\n    <h1>Home</h1>\r\n    <p>The Home Page is accessible by every signed in user.</p>\r\n  </div>\r\n);\r\n\r\nconst condition = authUser => !!authUser;\r\n\r\nexport default withAuthorization(condition)(HomePage);","import React, { Component } from 'react';\r\n\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst INITIAL_STATE = {\r\n  passwordOne: '',\r\n  passwordTwo: '',\r\n  error: null,\r\n};\r\n\r\nclass PasswordChangeForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { passwordOne } = this.state;\r\n\r\n    this.props.firebase\r\n      .doPasswordUpdate(passwordOne)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n    \r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { passwordOne, passwordTwo, error } = this.state;\r\n\r\n    const isInvalid =\r\n      passwordOne !== passwordTwo || passwordOne === '';\r\n    \r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input \r\n          name='passwordOne'\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type='password'\r\n          placeholder='New Password'\r\n        />\r\n        <input \r\n          name='passwordTwo'\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type='password'\r\n          placeholder='Confirm New Password'\r\n        />\r\n        <button disabled={isInvalid} type='submit' >\r\n          Reset My Password\r\n        </button>\r\n\r\n        {error && <p> {error.message} </p> }\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(PasswordChangeForm);","import React from 'react';\r\n\r\nimport { AuthUserContext, withAuthorization } from '../Session';\r\nimport { PasswordForgetForm } from '../PasswordForget';\r\nimport PasswordChangeForm from '../PasswordChange';\r\n\r\nconst AccountPage = () => (\r\n  <AuthUserContext.Consumer>\r\n    {authUser => (\r\n      <div>\r\n        <h1>Account: {authUser.email}</h1>\r\n        <PasswordForgetForm />\r\n        <PasswordChangeForm />\r\n      </div>\r\n    )}\r\n  </AuthUserContext.Consumer>\r\n);\r\n\r\nconst condition = authUser => !!authUser;\r\n\r\nexport default withAuthorization(condition)(AccountPage);","import React, {Component} from 'react';\r\nimport { withFirebase } from '../Firebase';\r\n\r\n\r\nclass AdminPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loading: false,\r\n      users: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n\r\n    this.props.firebase.users().on('value', snapshot => {\r\n      const usersObject = snapshot.val();\r\n\r\n      const usersList = Object.keys(usersObject).map(key => ({\r\n        ...usersObject[key],\r\n        uid: key,\r\n      }));\r\n\r\n      this.setState({\r\n        users: usersList,\r\n        loading: false,\r\n      });\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.firebase.users().off();\r\n  }\r\n\r\n  render() {\r\n    const { users, loading } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h1>Admin</h1>\r\n\r\n        {loading && <div>Loading ...</div>}\r\n        \r\n        <UserList users={users} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst UserList = ({ users }) => (\r\n  <ul>\r\n    {users.map(user => (\r\n      <li key={user.uid}>\r\n        <span>\r\n          <strong>ID:</strong> {user.uid}\r\n        </span>\r\n        <span>\r\n          <strong>E-Mail:</strong> {user.email}\r\n        </span>\r\n        <span>\r\n          <strong>Username:</strong> {user.username}\r\n        </span>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\n\r\nexport default withFirebase(AdminPage);","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route\r\n} from 'react-router-dom';\r\nimport Navigation from '../Navigation';\r\nimport LandingPage from '../Landing';\r\nimport SignUpPage from '../SignUp';\r\nimport SignInPage from '../SignIn';\r\nimport PasswordForgetPage from '../PasswordForget';\r\nimport HomePage from '../Home';\r\nimport AccountPage from '../Account';\r\nimport AdminPage from '../Admin';\r\n\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { withAuthentication } from '../Session';\r\n\r\nconst App = () => (\r\n  <Router>\r\n    <div>\r\n      <Navigation />\r\n\r\n      <hr />\r\n\r\n      <Route exact path={ROUTES.LANDING} component={LandingPage} />\r\n      <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\r\n      <Route path={ROUTES.SIGN_IN} component={SignInPage} />\r\n      <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} />\r\n      <Route path={ROUTES.HOME} component={HomePage} />\r\n      <Route path={ROUTES.ACCOUNT} component={AccountPage} />\r\n      <Route path={ROUTES.ADMIN} component={AdminPage} />\r\n    </div>\r\n  </Router> \r\n);\r\n\r\nexport default withAuthentication(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './components/App';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}